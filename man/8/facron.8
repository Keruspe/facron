.\" Copyright (c) 2012 Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
.\" Boston, MA  02111-1301  USA.
.TH FACRON 1
.SH NAME
facron \- Watch your filesystem's changes.

.SH "SYNOPSIS"
.B facron [options]

.SH "DESCRIPTION"
facron is a tool to watch your filesystem's changes and react to events.

.SH "CONFIGURATION"
facron configuration file is "/etc/facron.conf".

You can put as much entries as you want in this file, one entry per line.

Each line must be formatted like this:

    <file path> <fanotify masks> <command>

Each time an event matching the fanotify masks i sent regarding the file path given
the command is launched

The fanotify masks available are:

    FAN_ACCESS
    FAN_MODIFY
    FAN_CLOSE_WRITE
    FAN_CLOSE_NOWRITE
    FAN_OPEN
    FAN_Q_OVERFLOW
    FAN_OPEN_PERM
    FAN_ACCESS_PERM
    FAN_ONDIR
    FAN_EVENT_ON_CHILD
    FAN_CLOSE
    FAN_ALL_EVENTS
    FAN_ALL_PERM_EVENTS
    FAN_ALL_OUTGOING_EVENTS

If you configure your fanotify masks like this:

    FAN_MODIFY|FAN_CLOSE_WRITE,FAN_OPEN

The event caught will be: either FAN_MODIFY AND FAN_CLOSE_WRITE, or FAN_OPEN

The command should be an absolute path. You can pass it arguments.

If any of your arguments contain sapces, you can surrond it with quotes or double quotes.

Three special arguments are available:

    $@ corresponds to the dirname of your file
    $# corresponds to the basename of your file
    $$ corresponds to the full path of your file

You can reload the configuration at any time by sending a SIGUSR1 to facron:

    kill -USR1 $(pidof facron)
